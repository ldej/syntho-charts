# Copyright (c) Jupyter Development Team.
# Distributed under the terms of the Modified BSD License.

# JupyterHub docker-compose configuration file
version: "3"

services:
  hub-db:
    image: postgres:latest
    container_name: jupyterhub-db
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${DB_VOLUME_CONTAINER}
    env_file:
      - postgres.env
    volumes:
      - "db:${DB_VOLUME_CONTAINER}"

  hub:
    depends_on:
      - hub-db
    image: hub-syntho-jupyterhub:latest
    restart: always
    container_name: jupyterhub
    network_mode: host
    volumes:
      # Bind Docker socket on the host so we can connect to the daemon from
      # within the container
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
      # Bind Docker volume on host for JupyterHub database and cookie secrets
      - "data:${DATA_VOLUME_CONTAINER}"
      - ./:/srv
      - ~/.docker/config.json:/root/.docker/config.json
    ports:
      - "443:443"
    environment:
      # All containers will join this network
      DOCKER_NETWORK_NAME: ${DOCKER_NETWORK_NAME}
      # JupyterHub will spawn this Notebook image for users
      DOCKER_NOTEBOOK_IMAGE: ${DOCKER_NOTEBOOK_IMAGE}
      # Notebook directory inside user image
      DOCKER_NOTEBOOK_DIR: ${DOCKER_NOTEBOOK_DIR}
      # Using this run command (optional)
      DOCKER_SPAWN_CMD: ${DOCKER_SPAWN_CMD}
      # Postgres db info
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: localhost
      LICENSE_KEY_SIGNED: ${LICENSE_KEY}
    env_file:
      - postgres.env
    #  - secrets/oauth.env
    command: >
      jupyterhub -f /srv/jupyterhub_config.py
      

volumes:
  data:
      name: ${DATA_VOLUME_HOST}
  db:
      name: ${DB_VOLUME_HOST}

networks:
  default:
      name: ${DOCKER_NETWORK_NAME}
